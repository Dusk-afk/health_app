"""Add gender column to User and remove user_id from FamilyMember

Revision ID: 97dbdc3dff0a
Revises: f2388107862c
Create Date: 2025-04-18 04:36:39.950106

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '97dbdc3dff0a'
down_revision = 'f2388107862c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create a new table without the foreign key and copy the data
    op.execute('CREATE TABLE family_members_new ('
               'id INTEGER PRIMARY KEY, '
               'name VARCHAR(100) NOT NULL, '
               'relation VARCHAR(50) NOT NULL, '
               'date_of_birth DATE, '
               'gender VARCHAR(20), '
               'created_at DATETIME DEFAULT CURRENT_TIMESTAMP, '
               'updated_at DATETIME DEFAULT CURRENT_TIMESTAMP)')
    
    # Copy data from old table to new table (excluding user_id)
    op.execute('INSERT INTO family_members_new (id, name, relation, date_of_birth, created_at, updated_at) '
               'SELECT id, name, relation, date_of_birth, created_at, updated_at FROM family_members')
    
    # Drop the old table
    op.execute('DROP TABLE family_members')
    
    # Rename the new table to the original name
    op.execute('ALTER TABLE family_members_new RENAME TO family_members')
    
    # Add the gender column to users table
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gender', sa.String(length=20), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('gender')

    # For the downgrade, recreate the original table structure with user_id
    op.execute('CREATE TABLE family_members_old ('
               'id INTEGER PRIMARY KEY, '
               'user_id INTEGER NOT NULL, '
               'name VARCHAR(100) NOT NULL, '
               'relation VARCHAR(50) NOT NULL, '
               'date_of_birth DATE, '
               'created_at DATETIME DEFAULT CURRENT_TIMESTAMP, '
               'updated_at DATETIME DEFAULT CURRENT_TIMESTAMP, '
               'FOREIGN KEY (user_id) REFERENCES users (id))')
    
    # Copy data (users will need to reassign family members)
    op.execute('INSERT INTO family_members_old (id, name, relation, date_of_birth, created_at, updated_at) '
               'SELECT id, name, relation, date_of_birth, created_at, updated_at FROM family_members')
    
    # Drop the new table
    op.execute('DROP TABLE family_members')
    
    # Rename the old-format table to the original name
    op.execute('ALTER TABLE family_members_old RENAME TO family_members')
    # ### end Alembic commands ###
